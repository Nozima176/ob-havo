{"version":3,"sources":["components/ActiveCityBtn/index.js","components/ActiveCityBtn/ActiveCityBtn.js","containers/CitySwitcher/CitySwitcher.js","containers/CitySwitcher/index.js","assets/icons/sunrise.svg","assets/icons/drizzle.svg","assets/icons/rain.svg","assets/icons/tornado.svg","assets/icons/thunder.svg","assets/icons/snow.svg","assets/icons/stratuscumulus.svg","assets/icons/weathercock.svg","helpers/weatherCodeParse.js","pages/HomePage.js","pages/SingleCityPage.js","containers/Header/index.js","containers/Header/Header.js","App.js","index.js"],"names":["ActiveCityBtn","cityName","onClick","active","className","citiesArr","CitySwitcher","setActiveCity","activeCity","map","city","index","weatherCodeParse","weatherCode","thunderstorm","drizzle","rain","snow","tornado","clear","clouds","defaultIcon","HomePage","useState","isFetched","data","error","activeWeather","setActiveWeather","useEffect","axios","get","params","q","appid","units","then","response","catch","name","Math","round","main","temp","src","weather","id","SingleCityPage","match","Header","searchText","setSearchText","weatherInfo","setWeatherInfo","console","log","to","type","placeholder","value","onChange","e","target","length","alt","App","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e160c600.chunk.js","sourcesContent":["import ActiveCityBtn from './ActiveCityBtn';\n\nexport default ActiveCityBtn;","import './ActiveCityBtn.scss';\n\nconst ActiveCityBtn = ({cityName, onClick, active}) => {\n  return (\n    <button\n      className={`city-switcher-btn ${active ? 'active' : ''}`}\n      onClick={onClick}\n    >{cityName}</button>\n  )\n}\n\nexport default ActiveCityBtn;","import ActiveCityBtn from '../../components/ActiveCityBtn';\n\nimport './CitySwitcher.scss';\n\nconst citiesArr = [\n  'tashkent',\n  'paris',\n  'tokyo',\n  'medina',\n  'dubai',\n  'moscow',\n  'oslo',\n  'minsk'\n];\n\nconst CitySwitcher = ({setActiveCity, activeCity}) => {\n  return (\n    <div className=\"city-switcher\">\n      {\n        citiesArr.map((city, index) => (\n          <ActiveCityBtn\n            cityName={city}\n            key={index}\n            onClick={() => setActiveCity(city)}\n            active={activeCity == city}\n          />\n        ))\n      }\n    </div>\n  )\n}\n\nexport default CitySwitcher;","import CitySwitcher from './CitySwitcher';\n\nexport default CitySwitcher;","export default __webpack_public_path__ + \"static/media/sunrise.f287b3b2.svg\";","export default __webpack_public_path__ + \"static/media/drizzle.1fb8a72d.svg\";","export default __webpack_public_path__ + \"static/media/rain.05f5a7b7.svg\";","export default __webpack_public_path__ + \"static/media/tornado.4de02705.svg\";","export default __webpack_public_path__ + \"static/media/thunder.ff061d8c.svg\";","export default __webpack_public_path__ + \"static/media/snow.8e96e019.svg\";","export default __webpack_public_path__ + \"static/media/stratuscumulus.bc3585bd.svg\";","export default __webpack_public_path__ + \"static/media/weathercock.76030378.svg\";","import clear from '../assets/icons/sunrise.svg';\nimport drizzle from '../assets/icons/drizzle.svg';\nimport rain from '../assets/icons/rain.svg';\nimport tornado from '../assets/icons/tornado.svg';\nimport thunderstorm from '../assets/icons/thunder.svg';\nimport snow from '../assets/icons/snow.svg';\nimport clouds from '../assets/icons/stratuscumulus.svg';\nimport defaultIcon from '../assets/icons/weathercock.svg';\n\nconst weatherCodeParse = (weatherCode) => {\n  switch (true) {\n    case 200 <= weatherCode && weatherCode <= 232:\n      return thunderstorm;\n    case 300 <= weatherCode && weatherCode <= 321:\n      return drizzle;\n    case 500 <= weatherCode && weatherCode <= 531:\n      return rain;\n    case 600 <= weatherCode && weatherCode <= 622:\n      return snow;\n    case 701 <= weatherCode && weatherCode <= 781:\n      return tornado;\n    case weatherCode == 800:\n      return clear;\n    case 801 <= weatherCode && weatherCode <= 804:\n      return clouds;\n    default:\n      return defaultIcon;\n  }\n};\n\nexport default weatherCodeParse;","import { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nimport CitySwitcher from '../containers/CitySwitcher';\n\nimport weatherCodeParse from '../helpers/weatherCodeParse';\n\nconst HomePage = () => {\n\n  const [ activeCity, setActiveCity ] = useState('tashkent');\n  const [ activeWeather, setActiveWeather ] = useState({\n    isFetched: false,\n    data: {},\n    error: null\n  });\n\n  const fetchWeatherInfo = () => {\n    axios.get(`https://api.openweathermap.org/data/2.5/weather`, {\n      params: {\n        q: activeCity,\n        appid: '5ec646c90ce3554cf8cfb59c954c2849',\n        units: 'metric'\n      }\n    })\n    .then(function (response) {\n      setActiveWeather({\n        isFetched: true,\n        data: response.data,\n        error: false\n      })\n    })\n    .catch(function (error) {\n      setActiveWeather({\n        isFetched: true,\n        data: {},\n        error: error\n      })\n    })\n    .then(function () {\n      // always executed\n    });  \n  }\n\n  useEffect(() => {\n    fetchWeatherInfo();\n  }, [activeCity])\n\n  return (\n    <div>\n      <CitySwitcher setActiveCity={setActiveCity} activeCity={activeCity}/>\n      <div>\n        {\n          activeWeather.isFetched ? (\n            <div className=\"main-weather\">\n              <h1>{activeWeather.data.name}</h1>\n              <h1>{Math.round(activeWeather.data.main.temp)}Â° C</h1>\n              <img src={weatherCodeParse(activeWeather.data.weather[0].id)} className=\"weather-icon\"/>\n              <div>\n                {\n                  activeWeather.data.weather.map((weather) => (\n                    <h1>It's <span className=\"weather-status\">{weather.main}</span> now in <span className=\"weather-city\">{activeWeather.data.name}</span></h1>\n                  ))\n                }\n              </div>\n            </div>\n          ) : (\n            <h1>Loading...</h1>\n          )\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default HomePage;","import { useState, useEffect } from 'react';\nimport axios from 'axios';\n\n\nimport weatherCodeParse from '../helpers/weatherCodeParse';\n\n\nconst SingleCityPage = ({match}) => {\n  const [ activeWeather, setActiveWeather ] = useState({\n    isFetched: false,\n    data: {},\n    error: null\n  });\n\n   const fetchWeatherInfo = () => {\n    axios.get(`https://api.openweathermap.org/data/2.5/weather`, {\n      params: {\n        q: match.params.cityName,\n        appid: '5ec646c90ce3554cf8cfb59c954c2849',\n        units: 'metric'\n      }\n    })\n    .then(function (response) {\n      setActiveWeather({\n        isFetched: true,\n        data: response.data,\n        error: false\n      })\n    })\n    .catch(function (error) {\n      setActiveWeather({\n        isFetched: true,\n        data: {},\n        error: error\n      })\n    })\n    .then(function () {\n      // always executed\n    });  \n  }\n\n\n\n  useEffect(() => {\n    fetchWeatherInfo();\n  }, [])\n  return (\n   <> \n   <h1> {match.params.cityName}\n      {\n        activeWeather.isFetched ? (\n          <div className=\"main-weather\">\n            <h1>{activeWeather.data.name}</h1>\n            <h1>{Math.round(activeWeather.data.main.temp)}Â° C</h1>\n            <img src={weatherCodeParse(activeWeather.data.weather[0].id)} className=\"weather-icon\"/>\n            <div>\n              {\n                activeWeather.data.weather.map((weather) => (\n                  <h1>It's <span className=\"weather-status\">{weather.main}</span> now in <span className=\"weather-city\">{activeWeather.data.name}</span></h1>\n                ))\n              }\n            </div>\n          </div>\n          ) : (\n            <h1>Loading...</h1>\n          )\n      }\n\n\n     </h1></>\n  )\n}\n\nexport default SingleCityPage;","import Header from './Header';\n\nexport default Header;","import { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport axios from 'axios';\n\nimport weatherCodeParse from '../../helpers/weatherCodeParse';\n\nimport './Header.scss';\n\nconst Header = () => {\n  const [ searchText, setSearchText ] = useState('');\n  const [ weatherInfo, setWeatherInfo ] = useState({\n    isFetched: false,\n    name: '',\n    weather: [],\n    temp: {},\n    error: null\n  });\n\n  const fetchWeatherInfo = () => {\n    axios.get(`https://api.openweathermap.org/data/2.5/weather`, {\n      params: {\n        q: searchText,\n        appid: '5ec646c90ce3554cf8cfb59c954c2849',\n        units: 'metric'\n      }\n    })\n    .then(function (response) {\n      setWeatherInfo({\n        isFetched: true,\n        name: response.data.name,\n        weather: response.data.weather,\n        temp: response.data.main,\n        error: false\n      })\n    })\n    .catch(function (error) {\n      setWeatherInfo({\n        isFetched: true,\n        name: '',\n        weather: [],\n        temp: {},\n        error: error\n      })\n    })\n    .then(function () {\n      // always executed\n    });  \n  }\n\n  useEffect(() => {\n    fetchWeatherInfo();\n  }, [searchText])\n\n  console.log(weatherInfo.weather);\n  return (\n    <header className=\"header\">\n      <h1>\n        <Link to={`/`}>Weather</Link>\n      </h1>\n\n      <div className=\"search-input\">\n        <input\n          type=\"search\"\n          placeholder=\"Find your city\"\n          value={searchText}\n          onChange={(e) => setSearchText(e.target.value)}\n        />\n\n        {\n          searchText.length > 0 ? (\n            <div className=\"search-result\">\n              {\n                weatherInfo.isFetched ? (\n                  <div>\n                    {\n                      weatherInfo.weather.length > 0 ? (\n                        <Link\n                          to={`/city/${weatherInfo.name}`}\n                          className=\"weather-result-card\"\n                        >\n                          <h3>{weatherInfo.name}</h3>\n                          <img src={weatherCodeParse(weatherInfo.weather[0].id)} alt=\"\" className=\"weather-result-icon\"/>\n                          <h3>{Math.round(weatherInfo.temp.temp)}Â° C</h3>\n                        </Link>\n                      ) : (\n                        <h3>City not found</h3>\n                      )\n                    }\n                  </div>\n                ) : (\n                  <h1>Loading...</h1>\n                )\n              }\n            </div>\n          ) : (\n            <div></div>\n          )\n        }\n      </div>\n    </header>\n  )\n}\n\nexport default Header;","import {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from 'react-router-dom';\n\nimport {\n  HomePage,\n  SingleCityPage\n} from './pages';\n\nimport Header from './containers/Header';\n\nimport './assets/main.scss';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Header/>\n\n        <Switch>\n          <Route exact path=\"/\" component={HomePage}/>\n          <Route exact path=\"/city/:cityName\" component={SingleCityPage}/>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}